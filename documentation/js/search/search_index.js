var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/ApiGatewayModule.html",[0,1.475,1,2.019]],["body/modules/ApiGatewayModule.html",[0,2.515,1,3.772,2,2.054,3,2.054,4,2.548,5,2.548,6,2.054,7,2.548,8,2.548,9,3.337,10,3.337,11,3.041,12,0.035,13,3.164,14,2.548,15,2.278,16,0.447,17,0.386,18,0.386,19,1.41,20,4.023,21,4.023,22,3.583,23,0.899,24,1.693,25,3.337,26,0.447,27,0.511,28,0.028,29,0.028]],["title/modules/AuthModule.html",[0,1.475,30,2.019]],["body/modules/AuthModule.html",[0,2.506,2,2.038,3,2.038,4,2.529,5,2.529,6,2.038,7,3.149,8,2.529,11,3.036,12,0.035,13,3.149,14,2.529,15,2.261,16,0.444,17,0.383,18,0.383,22,3.566,23,0.895,24,1.681,25,3.312,26,0.444,27,0.508,28,0.028,29,0.028,30,3.765,31,3.312,32,3.993,33,3.993,34,2.261]],["title/classes/CreateUserDto.html",[27,0.405,35,0.458]],["body/classes/CreateUserDto.html",[12,0.033,16,0.52,17,0.449,18,0.449,19,1.637,26,0.52,27,0.594,28,0.031,29,0.031,35,0.786,36,2.162,37,3.875,38,2.646]],["title/classes/CreateUserDto-1.html",[27,0.342,35,0.387,39,1.244]],["body/classes/CreateUserDto-1.html",[12,0.033,16,0.522,17,0.451,18,0.451,26,0.522,27,0.596,28,0.031,29,0.031,35,0.788,36,2.171,38,2.657,40,3.892]],["title/interfaces/Empty.html",[41,0.573,42,1.117]],["body/interfaces/Empty.html",[12,0.036,16,0.261,17,0.225,18,0.225,23,0.622,26,0.654,28,0.019,29,0.019,35,0.591,41,1.018,42,1.589,43,0.899,44,0.75,45,0.986,46,0.986,47,0.75,48,2.061,49,0.685,50,1.922,51,0.821,52,1.327,53,0.624,54,0.899,55,1.741,56,0.899,57,1.315,58,1.673,59,0.739,60,1.2,61,1.695,62,1.909,63,1.548,64,1.106,65,0.75,66,1.174,67,1.455,68,1.455,69,1.455,70,0.986,71,0.986,72,0.986,73,0.986,74,0.75,75,0.75,76,1.455,77,1.455,78,1.455,79,1.455,80,1.455,81,1.455,82,0.75,83,2.036,84,1.577,85,0.75,86,0.685,87,0.899,88,1.455,89,0.899,90,0.899,91,0.899,92,0.899,93,0.899,94,2.131,95,1.909,96,1.455,97,0.986,98,1.455,99,1.455,100,0.821,101,0.986,102,0.75,103,0.378]],["title/interfaces/FindOneUserDto.html",[41,0.573,63,1.02]],["body/interfaces/FindOneUserDto.html",[12,0.036,16,0.255,17,0.22,18,0.22,23,0.612,26,0.651,28,0.019,29,0.019,35,0.583,41,1.013,42,1.421,43,0.88,44,0.734,45,0.965,46,0.965,47,0.734,48,2.053,49,0.67,50,1.911,51,0.803,52,1.306,53,0.611,54,0.88,55,1.722,56,0.88,57,1.298,58,1.699,59,0.73,60,1.468,61,1.68,62,1.889,63,1.607,64,1.089,65,0.734,66,1.163,67,1.432,68,1.432,69,1.432,70,0.965,71,0.965,72,0.965,73,0.965,74,0.734,75,0.734,76,1.432,77,1.432,78,1.432,79,1.432,80,1.432,81,1.432,82,0.734,83,2.018,84,1.557,85,0.734,86,0.67,87,0.88,88,1.432,89,0.88,90,0.88,91,0.88,92,0.88,93,0.88,94,2.114,95,1.889,96,1.432,97,0.965,98,1.432,99,1.432,100,0.803,101,0.965,102,0.734,103,0.37,104,0.505,105,1.192,106,0.556]],["title/interfaces/Message.html",[41,0.573,57,1.02]],["body/interfaces/Message.html",[12,0.036,16,0.255,17,0.22,18,0.22,23,0.612,26,0.651,28,0.019,29,0.019,35,0.583,41,1.013,42,1.421,43,0.88,44,0.734,45,0.965,46,0.965,47,0.734,48,2.053,49,0.67,50,1.911,51,0.803,52,1.306,53,0.611,54,0.88,55,1.722,56,0.88,57,1.664,58,1.699,59,0.73,60,1.185,61,1.68,62,1.889,63,1.534,64,1.089,65,0.734,66,1.163,67,1.432,68,1.432,69,1.432,70,0.965,71,0.965,72,0.965,73,0.965,74,0.734,75,0.734,76,1.432,77,1.432,78,1.432,79,1.432,80,1.432,81,1.432,82,0.734,83,2.018,84,1.557,85,0.734,86,0.67,87,0.88,88,1.432,89,0.88,90,0.88,91,0.88,92,0.88,93,0.88,94,2.114,95,1.889,96,1.432,97,0.965,98,1.432,99,1.432,100,0.803,101,0.965,102,0.734,103,0.37,104,0.505,105,1.192,106,0.556]],["title/interfaces/PaginationDto.html",[41,0.573,53,0.85]],["body/interfaces/PaginationDto.html",[12,0.036,16,0.251,17,0.217,18,0.217,23,0.605,26,0.65,28,0.019,29,0.019,35,0.578,41,1.01,42,1.409,43,0.867,44,0.723,45,0.951,46,0.951,47,0.723,48,2.048,49,0.66,50,1.904,51,0.792,52,1.291,53,0.897,54,1.71,55,2.041,56,1.71,57,1.287,58,1.661,59,0.723,60,1.175,61,1.669,62,1.875,63,1.525,64,1.077,65,0.723,66,1.156,67,1.416,68,1.416,69,1.416,70,0.951,71,0.951,72,0.951,73,0.951,74,0.723,75,0.723,76,1.416,77,1.416,78,1.416,79,1.416,80,1.416,81,1.416,82,0.723,83,2.005,84,1.543,85,0.723,86,0.66,87,0.867,88,1.416,89,0.867,90,0.867,91,0.867,92,0.867,93,0.867,94,2.102,95,1.875,96,1.416,97,0.951,98,1.416,99,1.416,100,0.792,101,0.951,102,0.723,103,0.365,104,0.498,105,1.179,106,0.817]],["title/interfaces/SocialMedia.html",[41,0.573,61,1.117]],["body/interfaces/SocialMedia.html",[12,0.036,16,0.245,17,0.212,18,0.212,23,0.594,26,0.647,28,0.019,29,0.019,35,0.57,41,1.004,42,1.388,43,0.846,44,0.705,45,0.927,46,0.927,47,0.705,48,2.039,49,0.644,50,1.891,51,0.772,52,1.268,53,0.587,54,0.846,55,1.689,56,0.846,57,1.268,58,1.713,59,0.713,60,1.158,61,1.734,62,2.221,63,1.509,64,1.057,65,0.705,66,1.144,67,1.39,68,1.39,69,1.39,70,0.927,71,0.927,72,1.852,73,1.852,74,0.705,75,0.705,76,1.39,77,1.39,78,1.39,79,1.39,80,1.39,81,1.39,82,0.705,83,1.984,84,1.52,85,0.705,86,0.644,87,0.846,88,1.39,89,0.846,90,0.846,91,0.846,92,0.846,93,0.846,94,2.083,95,1.852,96,1.39,97,0.927,98,1.39,99,1.39,100,0.772,101,0.927,102,0.705,103,0.356,104,0.486,105,1.157,106,0.801,107,2.036]],["title/classes/UpdateUserDto.html",[27,0.405,59,0.573]],["body/classes/UpdateUserDto.html",[12,0.034,16,0.486,17,0.419,18,0.419,19,1.53,23,0.945,26,0.486,27,0.555,28,0.029,29,0.029,35,0.628,36,2.021,38,2.473,59,0.945,108,3.622,109,4.357,110,4.357,111,3.622,112,3.132,113,3.132,114,2.473,115,3.622]],["title/classes/UpdateUserDto-1.html",[27,0.342,39,1.244,59,0.484]],["body/classes/UpdateUserDto-1.html",[12,0.035,16,0.461,17,0.398,18,0.398,23,0.916,26,0.461,27,0.527,28,0.029,29,0.029,35,0.596,36,1.919,38,2.349,55,1.954,59,0.916,60,1.61,104,0.914,105,1.784,106,1.007,109,4.223,110,4.223,111,3.44,112,2.974,113,2.974,114,2.349,115,3.44,116,4.223,117,1.919,118,4.147]],["title/classes/User.html",[27,0.405,66,0.774]],["body/classes/User.html",[12,0.033,16,0.522,17,0.451,18,0.451,19,1.644,26,0.522,27,0.596,28,0.031,29,0.031,36,2.171,66,1.33,119,3.892]],["title/classes/User-1.html",[27,0.342,39,1.244,66,0.652]],["body/classes/User-1.html",[12,0.033,16,0.524,17,0.453,18,0.453,26,0.524,27,0.599,28,0.031,29,0.031,36,2.181,66,1.334,120,3.909]],["title/interfaces/UserList.html",[41,0.573,64,1.02]],["body/interfaces/UserList.html",[12,0.036,16,0.255,17,0.22,18,0.22,23,0.612,26,0.651,28,0.019,29,0.019,35,0.583,41,1.013,42,1.421,43,0.88,44,0.734,45,0.965,46,0.965,47,0.734,48,2.053,49,0.67,50,1.911,51,0.803,52,1.306,53,0.611,54,0.88,55,1.722,56,0.88,57,1.298,58,1.666,59,0.73,60,1.185,61,1.68,62,1.889,63,1.534,64,1.298,65,1.436,66,1.262,67,1.432,68,1.432,69,1.432,70,0.965,71,0.965,72,0.965,73,0.965,74,0.734,75,0.734,76,1.432,77,1.432,78,1.432,79,1.432,80,1.432,81,1.432,82,0.734,83,2.018,84,1.557,85,0.734,86,0.67,87,0.88,88,1.432,89,0.88,90,0.88,91,0.88,92,0.88,93,0.88,94,2.114,95,1.889,96,1.432,97,0.965,98,1.432,99,1.432,100,0.803,101,0.965,102,0.734,103,0.37,104,0.505,105,1.192,106,0.556]],["title/controllers/UsersController.html",[121,1.805,122,1.627]],["body/controllers/UsersController.html",[12,0.036,16,0.291,17,0.251,18,0.251,19,1.898,23,0.787,24,1.102,26,0.291,27,0.333,28,0.021,29,0.021,34,1.482,35,0.756,58,1.648,59,0.997,60,1.537,65,0.838,86,1.537,103,0.706,104,0.577,106,1.159,107,2.211,114,2.122,117,2.434,121,1.482,122,1.913,123,2.171,124,2.617,125,1.913,126,3.426,127,2.687,128,2.687,129,4.778,130,2.687,131,1.877,132,5.26,133,4.376,134,2.617,135,2.439,136,2.211,137,2.685,138,2.617,139,1.877,140,3.747,141,2.617,142,1.877,143,3.747,144,2.617,145,3.747,146,2.617,147,1.877,148,3.747,149,2.617,150,3.747,151,2.617,152,2.617,153,2.617,154,1.877,155,1.482,156,2.617,157,2.171,158,2.171,159,2.617,160,2.171,161,2.171,162,2.617,163,2.617,164,2.617,165,2.617,166,2.617,167,2.617,168,2.617]],["title/controllers/UsersController-1.html",[39,1.244,121,1.522,122,1.373]],["body/controllers/UsersController-1.html",[12,0.036,16,0.311,17,0.268,18,0.268,23,0.885,24,1.177,26,0.311,27,0.355,28,0.022,29,0.022,34,1.583,35,0.745,48,1.724,49,0.817,53,0.745,59,0.967,63,1.833,82,1.256,85,1.256,86,1.571,89,1.507,90,1.889,91,1.507,92,1.507,93,1.507,100,1.376,103,0.732,104,0.616,106,1.258,107,2.398,117,2.487,121,2.223,122,2.004,125,2.004,135,2.646,136,2.398,137,2.744,154,2.004,155,1.583,157,2.318,158,2.318,160,2.318,161,2.318,169,2.318,170,3.925,171,2.795,172,2.795,173,3.925,174,2.795,175,3.256,176,2.795,177,2.318,178,3.925,179,2.795,180,3.925,181,2.795,182,2.004,183,2.795,184,2.795,185,2.795,186,2.795]],["title/modules/UsersModule.html",[0,1.475,11,1.627]],["body/modules/UsersModule.html",[0,2.304,2,1.708,3,1.708,4,2.118,5,2.118,6,1.708,7,3.154,8,2.118,11,2.896,12,0.036,13,2.81,14,2.118,15,1.894,16,0.372,17,0.321,18,0.321,19,1.172,22,2.399,23,1.041,24,1.408,26,0.372,27,0.425,28,0.025,29,0.025,34,2.513,47,1.071,74,1.42,103,0.915,122,2.542,136,1.548,154,2.399,155,1.894,187,2.774,188,2.774,189,3.345,190,3.345,191,3.345,192,4.437,193,2.81,194,2.774,195,2.774,196,3.345,197,3.345,198,3.345,199,3.345,200,2.774,201,3.345,202,3.345,203,3.345,204,3.345,205,2.399,206,3.345,207,3.345,208,3.345]],["title/injectables/UsersService.html",[103,0.514,209,1.805]],["body/injectables/UsersService.html",[12,0.036,16,0.243,17,0.21,18,0.21,19,1.923,23,0.846,24,0.922,26,0.243,27,0.278,28,0.018,29,0.018,35,0.676,39,1.521,47,0.701,49,0.64,50,0.767,53,0.584,54,1.804,56,1.804,58,1.574,59,0.948,60,1.374,65,1.052,75,1.263,86,1.443,87,0.84,102,0.701,103,0.759,104,0.483,105,1.152,106,1.198,107,2.175,114,1.861,117,2.493,125,1.678,126,3.146,127,2.357,128,2.357,130,2.357,131,2.357,135,2.4,136,2.175,137,2.614,139,2.357,142,2.357,147,2.357,155,1.24,182,1.57,193,1.387,194,1.816,200,2.727,209,1.861,210,1.57,211,1.816,212,3.638,213,4.386,214,4.095,215,2.19,216,4.386,217,3.287,218,2.19,219,2.19,220,2.19,221,2.19,222,2.19,223,1.816,224,2.19,225,2.19,226,2.19,227,3.287,228,2.19,229,2.19,230,2.19,231,2.19,232,2.19,233,2.19,234,2.19,235,2.19,236,1.57,237,4.701,238,1.57,239,4.095,240,2.19,241,1.816,242,2.19,243,3.946,244,2.19,245,2.19]],["title/injectables/UsersService-1.html",[39,1.244,103,0.434,209,1.522]],["body/injectables/UsersService-1.html",[12,0.036,16,0.232,17,0.2,18,0.2,23,0.77,24,0.879,26,0.232,27,0.265,28,0.018,29,0.018,35,0.616,39,1.467,48,1.699,49,0.61,50,1.699,53,1.022,57,1.37,58,1.517,59,0.934,60,1.472,64,0.668,65,1.474,66,1.316,86,1.251,100,1.343,103,0.512,104,1.015,105,1.111,106,1.176,107,2.13,114,1.795,117,2.402,125,1.619,126,2.749,127,2.274,128,2.274,130,2.274,131,1.497,135,2.35,136,2.13,137,2.572,139,1.497,142,2.274,147,2.274,155,1.182,175,1.731,177,2.63,182,1.497,209,1.795,210,1.497,212,3.18,214,4.021,223,1.731,236,2.749,238,1.497,246,1.731,247,2.087,248,2.087,249,2.087,250,2.087,251,2.087,252,2.087,253,2.087,254,1.731,255,1.731,256,2.087,257,2.087,258,3.833,259,2.087,260,2.087,261,4.281,262,3.17,263,3.17,264,3.17,265,3.17,266,3.833,267,2.087,268,2.087,269,2.087,270,2.087,271,3.17,272,2.63,273,2.087,274,3.17,275,2.087,276,2.087,277,3.17,278,2.087,279,2.087,280,2.087,281,2.087,282,2.087]],["title/interfaces/UsersServiceClient.html",[41,0.573,75,1.02]],["body/interfaces/UsersServiceClient.html",[12,0.036,16,0.214,17,0.185,18,0.185,23,0.536,26,0.631,28,0.017,29,0.017,35,0.638,41,0.972,42,1.556,43,0.739,44,0.616,45,0.811,46,0.811,47,0.616,48,2.09,49,0.563,50,1.82,51,0.675,52,1.144,53,0.513,54,0.739,55,1.576,56,0.739,57,1.167,58,1.603,59,0.799,60,1.066,61,1.556,62,1.728,63,1.662,64,0.954,65,0.616,66,1.078,67,1.255,68,1.255,69,1.255,70,0.811,71,0.811,72,0.811,73,0.811,74,0.616,75,0.954,76,1.535,77,1.535,78,1.535,79,1.535,80,1.535,81,1.535,82,0.616,83,1.869,84,1.4,85,0.616,86,0.563,87,0.739,88,1.255,89,1.4,90,1.4,91,1.4,92,1.4,93,1.4,94,1.977,95,1.728,96,1.255,97,0.811,98,1.255,99,1.255,100,1.278,101,0.811,102,0.616,103,0.311,104,0.425,106,1.139,107,2.173,117,2.173,125,1.522,135,2.397,136,2.173,137,2.397,283,1.926,284,3.895,285,1.926,286,1.926,287,1.926,288,1.926,289,1.926]],["title/interfaces/UsersServiceController.html",[41,0.573,82,1.02]],["body/interfaces/UsersServiceController.html",[12,0.036,16,0.207,17,0.179,18,0.179,23,0.522,26,0.627,28,0.016,29,0.016,35,0.628,41,0.963,42,1.531,43,0.714,44,0.595,45,0.783,46,0.783,47,0.595,48,2.079,49,0.543,50,1.8,51,0.651,52,1.113,53,0.496,54,0.714,55,1.546,56,0.714,57,1.289,58,1.589,59,0.786,60,1.042,61,1.531,62,1.696,63,1.644,64,1.141,65,0.595,66,1.213,67,1.221,68,1.221,69,1.221,70,0.783,71,0.783,72,0.783,73,0.783,74,0.595,75,0.595,76,1.501,77,1.501,78,1.501,79,1.501,80,1.501,81,1.501,82,0.928,83,2.212,84,1.369,85,0.595,86,0.543,87,0.714,88,1.221,89,1.369,90,1.369,91,1.369,92,1.369,93,1.369,94,1.948,95,1.696,96,1.221,97,0.783,98,1.221,99,1.221,100,1.25,101,0.783,102,0.595,103,0.3,104,0.41,106,1.123,107,2.141,117,2.141,125,1.481,135,2.362,136,2.141,137,2.362,284,3.838,290,1.859,291,1.859,292,1.859,293,1.859,294,1.859,295,1.859]],["title/coverage.html",[296,3.082]],["body/coverage.html",[6,1.926,12,0.035,18,0.254,19,1.904,27,0.671,28,0.021,29,0.021,35,0.633,37,2.193,38,2.718,40,2.193,41,1.044,42,0.926,44,1.918,51,0.926,53,0.705,57,0.846,59,0.792,61,0.926,63,0.846,64,0.846,66,1.068,74,0.846,75,0.846,82,0.846,84,1.689,85,0.846,102,0.846,103,0.609,106,0.642,108,2.193,116,2.193,119,2.193,120,2.193,121,2.137,122,1.926,123,2.193,169,2.193,193,1.674,209,2.137,211,2.193,236,1.896,238,4.487,246,2.193,296,1.896,297,2.193,298,2.643,299,2.643,300,2.193,301,5.912,302,2.193,303,4.799,304,5.075,305,2.643,306,2.193,307,4.799,308,2.643,309,2.643,310,4.4,311,2.643,312,2.643]],["title/dependencies.html",[3,1.95,205,1.928]],["body/dependencies.html",[3,2.151,12,0.035,24,1.773,28,0.029,29,0.029,47,1.348,49,1.231,112,3.021,113,3.021,313,4.213,314,4.213,315,4.213,316,4.213,317,4.213,318,4.213,319,5.547,320,4.213,321,4.213,322,4.213,323,4.213,324,4.213,325,4.213,326,4.213,327,4.213,328,4.213,329,4.213,330,4.213]],["title/miscellaneous/functions.html",[331,1.703,332,3.168]],["body/miscellaneous/functions.html",[6,3.128,12,0.03,19,1.589,28,0.03,29,0.03,44,1.451,85,1.832,104,0.999,300,3.76,306,3.76,331,2.871,332,3.76,333,5.372,334,3.76]],["title/index.html",[104,0.593,335,2.688,336,2.688]],["body/index.html",[12,0.033,15,2.866,17,0.225,28,0.019,29,0.019,195,1.943,272,1.943,296,1.68,297,2.867,337,2.343,338,2.343,339,4.108,340,3.457,341,2.343,342,2.343,343,2.343,344,2.343,345,3.457,346,1.943,347,4.108,348,2.343,349,2.343,350,2.343,351,4.535,352,2.343,353,4.535,354,5.373,355,2.343,356,5.235,357,2.343,358,2.343,359,3.457,360,2.343,361,3.457,362,2.343,363,4.108,364,2.343,365,3.457,366,2.343,367,2.343,368,2.343,369,2.343,370,2.343,371,4.535,372,5.373,373,5.061,374,2.343,375,3.457,376,2.343,377,2.343,378,2.343,379,2.343,380,2.343,381,5.061,382,3.457,383,4.535,384,2.343,385,3.457,386,2.343,387,2.343,388,3.457,389,5.061,390,4.535,391,2.343,392,3.457,393,2.343,394,2.343,395,2.343,396,2.343,397,4.535,398,2.343,399,2.343,400,2.343,401,2.343,402,3.457,403,2.343,404,2.343,405,2.343,406,2.343,407,2.343,408,3.457,409,2.343,410,2.343,411,2.343,412,3.457,413,2.343,414,2.343,415,3.762,416,3.457,417,2.343,418,2.343,419,2.343,420,2.343,421,2.343,422,2.343,423,2.343,424,2.343,425,3.457,426,2.343,427,2.343,428,2.343,429,2.343,430,4.108,431,2.343,432,2.343,433,2.343,434,2.343,435,2.343,436,2.343,437,3.457,438,2.343,439,2.343,440,2.343,441,2.343,442,2.343,443,3.457,444,2.343,445,2.343,446,2.343,447,3.457,448,3.457,449,2.343,450,2.343,451,2.343,452,2.343,453,2.343,454,2.343,455,2.343,456,2.343,457,2.343,458,2.343,459,1.943,460,2.343,461,2.343,462,2.343,463,2.343,464,2.343,465,2.343,466,1.943]],["title/modules.html",[2,2.194]],["body/modules.html",[1,2.847,2,2.295,11,2.729,12,0.03,28,0.03,29,0.03,30,2.847,415,4.896,467,5.903,468,5.903,469,5.903]],["title/overview.html",[470,3.564]],["body/overview.html",[0,1.848,1,3.59,2,2.038,3,2.038,4,2.529,5,2.529,6,2.038,7,2.529,8,2.529,9,3.312,10,3.312,11,3.112,12,0.033,13,3.149,14,2.529,15,2.261,28,0.028,29,0.028,30,3.59,31,3.312,34,2.261,36,1.848,43,1.533,103,0.915,187,3.312,188,3.312,210,2.863,239,4.125,241,3.312,470,3.312,471,3.993,472,3.993]],["title/properties.html",[105,1.338,205,1.928]],["body/properties.html",[12,0.035,28,0.031,29,0.031,105,1.644,346,3.892,459,3.892,466,3.892,473,4.692,474,4.692,475,4.692]],["title/miscellaneous/variables.html",[331,1.703,476,3.168]],["body/miscellaneous/variables.html",[12,0.035,19,1.426,28,0.028,29,0.028,44,1.302,51,1.763,52,2.097,58,1.668,74,1.61,102,1.61,103,0.657,104,0.897,106,1.385,193,3.186,254,4.733,255,4.733,302,3.375,331,2.577,334,4.531,476,3.375,477,4.069]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":238,"title":{},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"coverage.html":{}}}],["0.0.1",{"_index":474,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["0.7.13",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":39,"title":{"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto-1.html":{},"classes/User-1.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService-1.html":{}},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["1.12.6",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":472,"title":{},"body":{"overview.html":{}}}],["11.0.1",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["11.0.11",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":239,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["2.6.1",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":240,"title":{},"body":{"injectables/UsersService.html":{}}}],["4",{"_index":241,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["6",{"_index":471,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["age",{"_index":69,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["allowing",{"_index":403,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":453,"title":{},"body":{"index.html":{}}}],["apigatewaymodule",{"_index":1,"title":{"modules/ApiGatewayModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["app/common",{"_index":155,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["application",{"_index":373,"title":{},"body":{"index.html":{}}}],["applications",{"_index":345,"title":{},"body":{"index.html":{}}}],["apps/.../constants.ts",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/api",{"_index":19,"title":{},"body":{"modules/ApiGatewayModule.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/auth/src/auth.module.ts",{"_index":33,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/auth/src/main.ts",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/auth/src/users/dto/create",{"_index":40,"title":{},"body":{"classes/CreateUserDto-1.html":{},"coverage.html":{}}}],["apps/auth/src/users/dto/update",{"_index":116,"title":{},"body":{"classes/UpdateUserDto-1.html":{},"coverage.html":{}}}],["apps/auth/src/users/entities/user.entity.ts",{"_index":120,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["apps/auth/src/users/users.controller.ts",{"_index":169,"title":{},"body":{"controllers/UsersController-1.html":{},"coverage.html":{}}}],["apps/auth/src/users/users.controller.ts:19",{"_index":171,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apps/auth/src/users/users.controller.ts:23",{"_index":172,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apps/auth/src/users/users.controller.ts:27",{"_index":174,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apps/auth/src/users/users.controller.ts:31",{"_index":181,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apps/auth/src/users/users.controller.ts:35",{"_index":179,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apps/auth/src/users/users.controller.ts:39",{"_index":176,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apps/auth/src/users/users.service.ts",{"_index":246,"title":{},"body":{"injectables/UsersService-1.html":{},"coverage.html":{}}}],["apps/auth/src/users/users.service.ts:15",{"_index":256,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["apps/auth/src/users/users.service.ts:17",{"_index":250,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["apps/auth/src/users/users.service.ts:26",{"_index":247,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["apps/auth/src/users/users.service.ts:39",{"_index":248,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["apps/auth/src/users/users.service.ts:43",{"_index":249,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["apps/auth/src/users/users.service.ts:53",{"_index":253,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["apps/auth/src/users/users.service.ts:64",{"_index":252,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["apps/auth/src/users/users.service.ts:73",{"_index":251,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["auth",{"_index":52,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"miscellaneous/variables.html":{}}}],["auth/auth.proto",{"_index":208,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth_package_name",{"_index":74,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"modules/UsersModule.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_service",{"_index":193,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":459,"title":{},"body":{"index.html":{},"properties.html":{}}}],["aws",{"_index":392,"title":{},"body":{"index.html":{}}}],["backers",{"_index":454,"title":{},"body":{"index.html":{}}}],["based",{"_index":387,"title":{},"body":{"index.html":{}}}],["board",{"_index":446,"title":{},"body":{"index.html":{}}}],["body",{"_index":150,"title":{},"body":{"controllers/UsersController.html":{}}}],["boolean",{"_index":71,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":469,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":467,"title":{},"body":{"modules.html":{}}}],["building",{"_index":340,"title":{},"body":{"index.html":{}}}],["channel",{"_index":418,"title":{},"body":{"index.html":{}}}],["check",{"_index":381,"title":{},"body":{"index.html":{}}}],["chunknumber",{"_index":243,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":27,"title":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"coverage.html":{}}}],["classes",{"_index":36,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"overview.html":{}}}],["clicks",{"_index":402,"title":{},"body":{"index.html":{}}}],["client",{"_index":200,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["clientgrpc",{"_index":216,"title":{},"body":{"injectables/UsersService.html":{}}}],["clientsmodule",{"_index":191,"title":{},"body":{"modules/UsersModule.html":{}}}],["clientsmodule.register",{"_index":197,"title":{},"body":{"modules/UsersModule.html":{}}}],["cloud",{"_index":386,"title":{},"body":{"index.html":{}}}],["cluster_apigatewaymodule",{"_index":9,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_apigatewaymodule_imports",{"_index":10,"title":{},"body":{"modules/ApiGatewayModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":31,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":32,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_usersmodule",{"_index":187,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":188,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":409,"title":{},"body":{"index.html":{}}}],["complete",{"_index":281,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["configuration",{"_index":201,"title":{},"body":{"modules/UsersModule.html":{}}}],["console.log('chunk",{"_index":245,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":50,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["constants",{"_index":194,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["constructor(@inject(auth_service",{"_index":228,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(client",{"_index":215,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":157,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["controller",{"_index":121,"title":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["controller('users",{"_index":156,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":34,"title":{},"body":{"modules/AuthModule.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":424,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":296,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":114,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["create(@body",{"_index":159,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["createuser",{"_index":89,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["createuser(createuserdto",{"_index":170,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["createuser(request",{"_index":76,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["createuserdto",{"_index":35,"title":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["crypto",{"_index":260,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{}}}],["deeper",{"_index":420,"title":{},"body":{"index.html":{}}}],["default",{"_index":254,"title":{},"body":{"injectables/UsersService-1.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":117,"title":{},"body":{"classes/UpdateUserDto-1.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["delete",{"_index":153,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":143,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":371,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":391,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":382,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":401,"title":{},"body":{"index.html":{}}}],["description",{"_index":346,"title":{},"body":{"index.html":{},"properties.html":{}}}],["descriptor",{"_index":95,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["development",{"_index":357,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":432,"title":{},"body":{"index.html":{}}}],["discord",{"_index":417,"title":{},"body":{"index.html":{}}}],["dive",{"_index":419,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":297,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e2e",{"_index":366,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":341,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":379,"title":{},"body":{"index.html":{}}}],["emailusers",{"_index":213,"title":{},"body":{"injectables/UsersService.html":{}}}],["empty",{"_index":42,"title":{"interfaces/Empty.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["ensure",{"_index":377,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":436,"title":{},"body":{"index.html":{}}}],["example",{"_index":353,"title":{},"body":{"index.html":{}}}],["exist",{"_index":264,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["experience",{"_index":422,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":109,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}}}],["fast",{"_index":395,"title":{},"body":{"index.html":{}}}],["fburi",{"_index":73,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["features",{"_index":405,"title":{},"body":{"index.html":{}}}],["few",{"_index":397,"title":{},"body":{"index.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["findall",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["findallusers",{"_index":90,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["findallusers(request",{"_index":77,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["findone",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["findone(@param('id",{"_index":162,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":139,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["findoneuser",{"_index":91,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["findoneuser(findoneuserdto",{"_index":173,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["findoneuser(request",{"_index":78,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["findoneuserdto",{"_index":63,"title":{"interfaces/FindOneUserDto.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["focus",{"_index":404,"title":{},"body":{"index.html":{}}}],["follow",{"_index":440,"title":{},"body":{"index.html":{}}}],["framework",{"_index":339,"title":{},"body":{"index.html":{}}}],["full",{"_index":435,"title":{},"body":{"index.html":{}}}],["function",{"_index":84,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["functions",{"_index":332,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":400,"title":{},"body":{"index.html":{}}}],["gateway.module.ts",{"_index":21,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["gateway/src/api",{"_index":20,"title":{},"body":{"modules/ApiGatewayModule.html":{}}}],["gateway/src/main.ts",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gateway/src/users/constants.ts",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gateway/src/users/dto/create",{"_index":37,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["gateway/src/users/dto/update",{"_index":108,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["gateway/src/users/entities/user.entity.ts",{"_index":119,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["gateway/src/users/users.controller.ts",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["gateway/src/users/users.controller.ts:18",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["gateway/src/users/users.controller.ts:23",{"_index":138,"title":{},"body":{"controllers/UsersController.html":{}}}],["gateway/src/users/users.controller.ts:28",{"_index":141,"title":{},"body":{"controllers/UsersController.html":{}}}],["gateway/src/users/users.controller.ts:33",{"_index":149,"title":{},"body":{"controllers/UsersController.html":{}}}],["gateway/src/users/users.controller.ts:38",{"_index":144,"title":{},"body":{"controllers/UsersController.html":{}}}],["gateway/src/users/users.controller.ts:43",{"_index":146,"title":{},"body":{"controllers/UsersController.html":{}}}],["gateway/src/users/users.module.ts",{"_index":189,"title":{},"body":{"modules/UsersModule.html":{}}}],["gateway/src/users/users.service.ts",{"_index":211,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["gateway/src/users/users.service.ts:15",{"_index":217,"title":{},"body":{"injectables/UsersService.html":{}}}],["gateway/src/users/users.service.ts:19",{"_index":222,"title":{},"body":{"injectables/UsersService.html":{}}}],["gateway/src/users/users.service.ts:24",{"_index":218,"title":{},"body":{"injectables/UsersService.html":{}}}],["gateway/src/users/users.service.ts:28",{"_index":220,"title":{},"body":{"injectables/UsersService.html":{}}}],["gateway/src/users/users.service.ts:32",{"_index":221,"title":{},"body":{"injectables/UsersService.html":{}}}],["gateway/src/users/users.service.ts:36",{"_index":225,"title":{},"body":{"injectables/UsersService.html":{}}}],["gateway/src/users/users.service.ts:40",{"_index":224,"title":{},"body":{"injectables/UsersService.html":{}}}],["gateway/src/users/users.service.ts:44",{"_index":219,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(':id",{"_index":140,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":335,"title":{"index.html":{}},"body":{}}],["graph",{"_index":427,"title":{},"body":{"index.html":{}}}],["grow",{"_index":450,"title":{},"body":{"index.html":{}}}],["grpc/grpc",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["grpc/proto",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["grpcmethod",{"_index":45,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["grpcmethod(\"usersservice",{"_index":97,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["grpcmethods",{"_index":88,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["grpcstreammethod",{"_index":46,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["grpcstreammethod(\"usersservice",{"_index":101,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["grpcstreammethods",{"_index":99,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["hands",{"_index":421,"title":{},"body":{"index.html":{}}}],["handy",{"_index":410,"title":{},"body":{"index.html":{}}}],["help",{"_index":425,"title":{},"body":{"index.html":{}}}],["here",{"_index":457,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":463,"title":{},"body":{"index.html":{}}}],["id",{"_index":60,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["identifier",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":182,"title":{},"body":{"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":104,"title":{"index.html":{}},"body":{"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["information",{"_index":384,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":407,"title":{},"body":{"index.html":{}}}],["inject",{"_index":226,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":209,"title":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"coverage.html":{}}}],["injectables",{"_index":210,"title":{},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"overview.html":{}}}],["inside",{"_index":199,"title":{},"body":{"modules/UsersModule.html":{}}}],["install",{"_index":399,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":355,"title":{},"body":{"index.html":{}}}],["interact",{"_index":428,"title":{},"body":{"index.html":{}}}],["interface",{"_index":41,"title":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["interfaces",{"_index":43,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"overview.html":{}}}],["item.id",{"_index":261,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["job",{"_index":443,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":445,"title":{},"body":{"index.html":{}}}],["join",{"_index":195,"title":{},"body":{"modules/UsersModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":207,"title":{},"body":{"modules/UsersModule.html":{}}}],["js",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":460,"title":{},"body":{"index.html":{}}}],["key",{"_index":374,"title":{},"body":{"index.html":{}}}],["learn",{"_index":413,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["libs/.../auth.ts",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/types/auth.ts",{"_index":44,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/common/src/types/auth.ts:61",{"_index":283,"title":{},"body":{"interfaces/UsersServiceClient.html":{}}}],["libs/common/src/types/auth.ts:63",{"_index":285,"title":{},"body":{"interfaces/UsersServiceClient.html":{}}}],["libs/common/src/types/auth.ts:65",{"_index":286,"title":{},"body":{"interfaces/UsersServiceClient.html":{}}}],["libs/common/src/types/auth.ts:67",{"_index":289,"title":{},"body":{"interfaces/UsersServiceClient.html":{}}}],["libs/common/src/types/auth.ts:69",{"_index":288,"title":{},"body":{"interfaces/UsersServiceClient.html":{}}}],["libs/common/src/types/auth.ts:71",{"_index":287,"title":{},"body":{"interfaces/UsersServiceClient.html":{}}}],["libs/common/src/types/auth.ts:75",{"_index":290,"title":{},"body":{"interfaces/UsersServiceController.html":{}}}],["libs/common/src/types/auth.ts:77",{"_index":291,"title":{},"body":{"interfaces/UsersServiceController.html":{}}}],["libs/common/src/types/auth.ts:79",{"_index":292,"title":{},"body":{"interfaces/UsersServiceController.html":{}}}],["libs/common/src/types/auth.ts:81",{"_index":295,"title":{},"body":{"interfaces/UsersServiceController.html":{}}}],["libs/common/src/types/auth.ts:83",{"_index":294,"title":{},"body":{"interfaces/UsersServiceController.html":{}}}],["libs/common/src/types/auth.ts:85",{"_index":293,"title":{},"body":{"interfaces/UsersServiceController.html":{}}}],["license",{"_index":466,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":448,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":442,"title":{},"body":{"index.html":{}}}],["loader",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["looking",{"_index":385,"title":{},"body":{"index.html":{}}}],["loop",{"_index":438,"title":{},"body":{"index.html":{}}}],["makes",{"_index":393,"title":{},"body":{"index.html":{}}}],["managing",{"_index":406,"title":{},"body":{"index.html":{}}}],["matching",{"_index":29,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":389,"title":{},"body":{"index.html":{}}}],["message",{"_index":57,"title":{"interfaces/Message.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["metadata",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":94,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["method)(constructor.prototype[method",{"_index":98,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["methods",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["miscellaneous",{"_index":331,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":447,"title":{},"body":{"index.html":{}}}],["mode",{"_index":359,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":383,"title":{},"body":{"index.html":{}}}],["moved",{"_index":198,"title":{},"body":{"modules/UsersModule.html":{}}}],["myśliwiec",{"_index":461,"title":{},"body":{"index.html":{}}}],["name",{"_index":136,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["need",{"_index":433,"title":{},"body":{"index.html":{}}}],["nest",{"_index":347,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":465,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":372,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":112,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":47,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":236,"title":{},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"coverage.html":{}}}],["next",{"_index":280,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["node.js",{"_index":338,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":257,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["notfoundexception('user",{"_index":263,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["number",{"_index":55,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["object",{"_index":202,"title":{},"body":{"modules/UsersModule.html":{}}}],["observable",{"_index":48,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["offer",{"_index":444,"title":{},"body":{"index.html":{}}}],["official",{"_index":390,"title":{},"body":{"index.html":{}}}],["oncomplete",{"_index":277,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["onmoduleinit",{"_index":214,"title":{},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["onnext",{"_index":271,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["open",{"_index":449,"title":{},"body":{"index.html":{}}}],["optional",{"_index":107,"title":{},"body":{"interfaces/SocialMedia.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["options",{"_index":204,"title":{},"body":{"modules/UsersModule.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":470,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":205,"title":{"dependencies.html":{},"properties.html":{}},"body":{"modules/UsersModule.html":{}}}],["page",{"_index":54,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["paginationdto",{"_index":53,"title":{"interfaces/PaginationDto.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["paginationdto.page",{"_index":273,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["paginationdto.skip",{"_index":274,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["paginationdtostream",{"_index":177,"title":{},"body":{"controllers/UsersController-1.html":{},"injectables/UsersService-1.html":{}}}],["paginationdtostream.subscribe",{"_index":279,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["param",{"_index":152,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":135,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["part",{"_index":434,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":111,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}}}],["partialtype(createuserdto",{"_index":110,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}}}],["password",{"_index":68,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["patch",{"_index":151,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":148,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":196,"title":{},"body":{"modules/UsersModule.html":{}}}],["platform",{"_index":388,"title":{},"body":{"index.html":{}}}],["please",{"_index":416,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":354,"title":{},"body":{"index.html":{}}}],["possible",{"_index":380,"title":{},"body":{"index.html":{}}}],["post",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('email",{"_index":145,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":212,"title":{},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["production",{"_index":361,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":337,"title":{},"body":{"index.html":{}}}],["project",{"_index":351,"title":{},"body":{"index.html":{}}}],["promise",{"_index":83,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"properties.html":{}}}],["proto",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["protobufpackage",{"_index":51,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["protopath",{"_index":206,"title":{},"body":{"modules/UsersModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["queryusers",{"_index":100,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["queryusers(paginationdtostream",{"_index":175,"title":{},"body":{"controllers/UsersController-1.html":{},"injectables/UsersService-1.html":{}}}],["queryusers(request",{"_index":81,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["questions",{"_index":414,"title":{},"body":{"index.html":{}}}],["randomuuid",{"_index":259,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["read",{"_index":456,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":158,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["ready",{"_index":370,"title":{},"body":{"index.html":{}}}],["real",{"_index":429,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["reflect.getownpropertydescriptor(constructor.prototype",{"_index":96,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["remove",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["remove(@param('id",{"_index":166,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":142,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["removed",{"_index":269,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["removeuser",{"_index":93,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["removeuser(findoneuserdto",{"_index":178,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["removeuser(request",{"_index":80,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["replaysubject",{"_index":227,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":350,"title":{},"body":{"index.html":{}}}],["request",{"_index":284,"title":{},"body":{"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["requiring",{"_index":396,"title":{},"body":{"index.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":408,"title":{},"body":{"index.html":{}}}],["results",{"_index":28,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":86,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["returns",{"_index":137,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["run",{"_index":356,"title":{},"body":{"index.html":{}}}],["runs",{"_index":378,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":49,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"dependencies.html":{}}}],["scalable",{"_index":342,"title":{},"body":{"index.html":{}}}],["sendemail",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{}}}],["server",{"_index":343,"title":{},"body":{"index.html":{}}}],["setup",{"_index":352,"title":{},"body":{"index.html":{}}}],["side",{"_index":344,"title":{},"body":{"index.html":{}}}],["simple",{"_index":398,"title":{},"body":{"index.html":{}}}],["skip",{"_index":56,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["socialmedia",{"_index":61,"title":{"interfaces/SocialMedia.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"index.html":{}}}],["sponsors",{"_index":452,"title":{},"body":{"index.html":{}}}],["start",{"_index":272,"title":{},"body":{"injectables/UsersService-1.html":{},"index.html":{}}}],["start:dev",{"_index":360,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":362,"title":{},"body":{"index.html":{}}}],["started",{"_index":336,"title":{"index.html":{}},"body":{}}],["starter",{"_index":349,"title":{},"body":{"index.html":{}}}],["statements",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":437,"title":{},"body":{"index.html":{}}}],["steps",{"_index":375,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":394,"title":{},"body":{"index.html":{}}}],["string",{"_index":58,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":258,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["subject.asobservable",{"_index":282,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["subject.complete",{"_index":278,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["subject.next",{"_index":275,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["subscribed",{"_index":70,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["successfully",{"_index":270,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["support",{"_index":415,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":468,"title":{},"body":{"modules.html":{}}}],["table",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":376,"title":{},"body":{"index.html":{}}}],["test",{"_index":365,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":368,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":367,"title":{},"body":{"index.html":{}}}],["tests",{"_index":363,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":451,"title":{},"body":{"index.html":{}}}],["this.client.getservice(users_service_name",{"_index":230,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.users",{"_index":267,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.users.filter((item",{"_index":268,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.users.findindex((item",{"_index":265,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.users.slice(start",{"_index":276,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.users[index",{"_index":266,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["this.usersservice",{"_index":229,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":160,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":231,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.emailusers",{"_index":168,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":161,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["this.usersservice.findallusers",{"_index":232,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findone(findoneuserdto.id",{"_index":183,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["this.usersservice.findone(id",{"_index":163,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findoneuser",{"_index":233,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.queryusers(paginationdtostream",{"_index":186,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["this.usersservice.queryusers(users$).subscribe((users",{"_index":244,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.remove(findoneuserdto.id",{"_index":185,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["this.usersservice.remove(id",{"_index":167,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.removeuser",{"_index":235,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.update(id",{"_index":165,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto.id",{"_index":184,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["this.usersservice.updateuser",{"_index":234,"title":{},"body":{"injectables/UsersService.html":{}}}],["throw",{"_index":262,"title":{},"body":{"injectables/UsersService-1.html":{}}}],["time",{"_index":430,"title":{},"body":{"index.html":{}}}],["touch",{"_index":458,"title":{},"body":{"index.html":{}}}],["transport",{"_index":192,"title":{},"body":{"modules/UsersModule.html":{}}}],["transport.grpc",{"_index":203,"title":{},"body":{"modules/UsersModule.html":{}}}],["ts",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":464,"title":{},"body":{"index.html":{}}}],["twitteruri",{"_index":72,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["type",{"_index":106,"title":{},"body":{"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":113,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"dependencies.html":{}}}],["typescript",{"_index":348,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":62,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["unit",{"_index":364,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":475,"title":{},"body":{"properties.html":{}}}],["update",{"_index":130,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["update(@param('id",{"_index":164,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":147,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["updates",{"_index":439,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":92,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["updateuser(request",{"_index":79,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["updateuser(updateuserdto",{"_index":180,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["updateuserdto",{"_index":59,"title":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["user",{"_index":66,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"classes/User.html":{},"classes/User-1.html":{},"interfaces/UserList.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["user.dto",{"_index":115,"title":{},"body":{"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{}}}],["user.dto.ts",{"_index":38,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserDto-1.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":118,"title":{},"body":{"classes/UpdateUserDto-1.html":{}}}],["userlist",{"_index":64,"title":{"interfaces/UserList.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["username",{"_index":67,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["users",{"_index":65,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{}}}],["users$.complete",{"_index":242,"title":{},"body":{"injectables/UsersService.html":{}}}],["users$.next",{"_index":237,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.controller",{"_index":190,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":154,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":25,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{}}}],["users_service_name",{"_index":102,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":122,"title":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":11,"title":{"modules/UsersModule.html":{}},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":103,"title":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/UsersService-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["usersserviceclient",{"_index":75,"title":{"interfaces/UsersServiceClient.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"injectables/UsersService.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["usersservicecontroller",{"_index":82,"title":{"interfaces/UsersServiceController.html":{}},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{}}}],["usersservicecontrollermethods",{"_index":85,"title":{},"body":{"interfaces/Empty.html":{},"interfaces/FindOneUserDto.html":{},"interfaces/Message.html":{},"interfaces/PaginationDto.html":{},"interfaces/SocialMedia.html":{},"interfaces/UserList.html":{},"controllers/UsersController-1.html":{},"interfaces/UsersServiceClient.html":{},"interfaces/UsersServiceController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["using",{"_index":431,"title":{},"body":{"index.html":{}}}],["value",{"_index":255,"title":{},"body":{"injectables/UsersService-1.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":476,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":473,"title":{},"body":{"properties.html":{}}}],["video",{"_index":423,"title":{},"body":{"index.html":{}}}],["visit",{"_index":412,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":426,"title":{},"body":{"index.html":{}}}],["void",{"_index":223,"title":{},"body":{"injectables/UsersService.html":{},"injectables/UsersService-1.html":{}}}],["watch",{"_index":358,"title":{},"body":{"index.html":{}}}],["website",{"_index":462,"title":{},"body":{"index.html":{}}}],["working",{"_index":411,"title":{},"body":{"index.html":{}}}],["x",{"_index":441,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":455,"title":{},"body":{"index.html":{}}}],["you're",{"_index":369,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/ApiGatewayModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/ApiGatewayModule.html":{"url":"modules/ApiGatewayModule.html","title":"module - ApiGatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiGatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiGatewayModule\n\n\n\ncluster_ApiGatewayModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nApiGatewayModule\n\nApiGatewayModule\n\nApiGatewayModule -->\n\nUsersModule->ApiGatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/api-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [UsersModule],\n})\nexport class ApiGatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/auth/src/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  controllers: [],\n  providers: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto-1.html":{"url":"classes/CreateUserDto-1.html","title":"class - CreateUserDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Empty.html":{"url":"interfaces/Empty.html","title":"interface - Empty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Empty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FindOneUserDto.html":{"url":"interfaces/FindOneUserDto.html","title":"interface - FindOneUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FindOneUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationDto.html":{"url":"interfaces/PaginationDto.html","title":"interface - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialMedia.html":{"url":"interfaces/SocialMedia.html","title":"interface - SocialMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SocialMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fbUri\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            twitterUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fbUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fbUri:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        twitterUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        twitterUri:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto-1.html":{"url":"classes/UpdateUserDto-1.html","title":"class - UpdateUserDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/users/dto/update-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserList.html":{"url":"interfaces/UserList.html","title":"interface - UserList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                sendEmail\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('email')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto, UpdateUserDto } from '@app/common';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n\n  @Post('email')\n  sendEmail() {\n    return this.usersService.emailUsers();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController-1.html":{"url":"controllers/UsersController-1.html","title":"controller - UsersController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                findAllUsers\n                            \n                            \n                                findOneUser\n                            \n                            \n                                queryUsers\n                            \n                            \n                                removeUser\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \nfindAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneUser\n                        \n                    \n                \n            \n            \n                \nfindOneUser(findOneUserDto: FindOneUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                findOneUserDto\n                                            \n                                                            FindOneUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryUsers\n                        \n                    \n                \n            \n            \n                \nqueryUsers(paginationDtoStream: Observable)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDtoStream\n                                            \n                                                            Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUser\n                        \n                    \n                \n            \n            \n                \nremoveUser(findOneUserDto: FindOneUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                findOneUserDto\n                                            \n                                                            FindOneUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\nimport {\n  CreateUserDto,\n  FindOneUserDto,\n  PaginationDto,\n  UpdateUserDto,\n  UsersServiceController,\n  UsersServiceControllerMethods,\n} from '@app/common';\nimport { Observable } from 'rxjs';\n\n@Controller()\n@UsersServiceControllerMethods()\nexport class UsersController implements UsersServiceController {\n  constructor(private readonly usersService: UsersService) {}\n\n  createUser(createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  findAllUsers() {\n    return this.usersService.findAll();\n  }\n\n  findOneUser(findOneUserDto: FindOneUserDto) {\n    return this.usersService.findOne(findOneUserDto.id);\n  }\n\n  updateUser(updateUserDto: UpdateUserDto) {\n    return this.usersService.update(updateUserDto.id, updateUserDto);\n  }\n\n  removeUser(findOneUserDto: FindOneUserDto) {\n    return this.usersService.remove(findOneUserDto.id);\n  }\n\n  queryUsers(paginationDtoStream: Observable) {\n    return this.usersService.queryUsers(paginationDtoStream);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api-gateway/src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { AUTH_SERVICE } from './constants';\nimport { AUTH_PACKAGE_NAME } from '@app/common';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: AUTH_SERVICE, // Moved inside the client configuration object\n        transport: Transport.GRPC,\n        options: {\n          package: AUTH_PACKAGE_NAME,\n          protoPath: join(__dirname, '../../auth/auth.proto'),\n        },\n      },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api-gateway/src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                usersService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                emailUsers\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientGrpc)\n                    \n                \n                        \n                            \n                                Defined in apps/api-gateway/src/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientGrpc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailUsers\n                        \n                    \n                \n            \n            \n                \nemailUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/api-gateway/src/users/users.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        usersService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersServiceClient\n\n                    \n                \n                    \n                        \n                                Defined in apps/api-gateway/src/users/users.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CreateUserDto,\n  PaginationDto,\n  UpdateUserDto,\n  USERS_SERVICE_NAME,\n  UsersServiceClient,\n} from '@app/common';\nimport { Inject, Injectable, OnModuleInit } from '@nestjs/common';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { AUTH_SERVICE } from './constants';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class UsersService implements OnModuleInit {\n  private usersService: UsersServiceClient;\n\n  constructor(@Inject(AUTH_SERVICE) private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.usersService =\n      this.client.getService(USERS_SERVICE_NAME);\n  }\n\n  create(createUserDto: CreateUserDto) {\n    return this.usersService.createUser(createUserDto);\n  }\n\n  findAll() {\n    return this.usersService.findAllUsers({});\n  }\n\n  findOne(id: string) {\n    return this.usersService.findOneUser({ id });\n  }\n\n  update(id: string, updateUserDto: UpdateUserDto) {\n    return this.usersService.updateUser({ ...updateUserDto });\n  }\n\n  remove(id: string) {\n    return this.usersService.removeUser({ id });\n  }\n\n  emailUsers() {\n    const users$ = new ReplaySubject();\n\n    users$.next({ page: 0, skip: 2 });\n    users$.next({ page: 1, skip: 2 });\n    // users$.next({ page: 2, skip: 2 });\n    // users$.next({ page: 3, skip: 2 });\n    // users$.next({ page: 4, skip: 2 });\n\n    users$.complete();\n\n    let chunkNumber = 1;\n\n    return this.usersService.queryUsers(users$).subscribe((users) => {\n      console.log('Chunk', chunkNumber, users);\n      chunkNumber++;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService-1.html":{"url":"injectables/UsersService-1.html","title":"injectable - UsersService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/auth/src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                queryUsers\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { users: {}; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryUsers\n                        \n                    \n                \n            \n            \n                \nqueryUsers(paginationDtoStream: Observable)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paginationDtoStream\n                                            \n                                                            Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Message\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/auth/src/users/users.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/auth/src/users/users.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, OnModuleInit } from '@nestjs/common';\nimport {\n  CreateUserDto,\n  Message,\n  PaginationDto,\n  UpdateUserDto,\n  User,\n  UserList,\n} from '@app/common';\nimport { Observable, Subject } from 'rxjs';\nimport { randomUUID } from 'crypto';\n\n@Injectable()\nexport class UsersService implements OnModuleInit {\n  private users: User[] = [];\n\n  onModuleInit() {\n    for (let i = 0; i  item.id === id);\n\n    if (!user) {\n      throw new NotFoundException('User does not exist.');\n    }\n\n    return user;\n  }\n\n  update(id: string, updateUserDto: UpdateUserDto): User {\n    const index = this.users.findIndex((item) => item.id === id);\n\n    if (index !== -1) {\n      this.users[index] = { ...this.users[index], ...updateUserDto };\n      return this.users[index];\n    }\n\n    throw new NotFoundException('User does not exist.');\n  }\n\n  remove(id: string): Message {\n    const index = this.users.findIndex((item) => item.id === id);\n    if (index !== -1) {\n      this.users = this.users.filter((item) => item.id !== id);\n    }\n\n    return { message: 'User is removed successfully.' };\n  }\n\n  queryUsers(\n    paginationDtoStream: Observable,\n  ): Observable {\n    const subject = new Subject();\n\n    const onNext = (paginationDto: PaginationDto) => {\n      const start = paginationDto.page * paginationDto.skip;\n      subject.next({\n        users: this.users.slice(start, start + paginationDto.skip),\n      });\n    };\n\n    const onComplete = () => subject.complete();\n    paginationDtoStream.subscribe({\n      next: onNext,\n      complete: onComplete,\n    });\n\n    return subject.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersServiceClient.html":{"url":"interfaces/UsersServiceClient.html","title":"interface - UsersServiceClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersServiceClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        findAllUsers\n                                    \n                                \n                                \n                                    \n                                        findOneUser\n                                    \n                                \n                                \n                                    \n                                        queryUsers\n                                    \n                                \n                                \n                                    \n                                        removeUser\n                                    \n                                \n                                \n                                    \n                                        updateUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(request: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \nfindAllUsers(request: Empty)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            Empty\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneUser\n                        \n                    \n                \n            \n            \n                \nfindOneUser(request: FindOneUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            FindOneUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryUsers\n                        \n                    \n                \n            \n            \n                \nqueryUsers(request: Observable)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUser\n                        \n                    \n                \n            \n            \n                \nremoveUser(request: FindOneUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            FindOneUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(request: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersServiceController.html":{"url":"interfaces/UsersServiceController.html","title":"interface - UsersServiceController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/types/auth.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        findAllUsers\n                                    \n                                \n                                \n                                    \n                                        findOneUser\n                                    \n                                \n                                \n                                    \n                                        queryUsers\n                                    \n                                \n                                \n                                    \n                                        removeUser\n                                    \n                                \n                                \n                                    \n                                        updateUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(request: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise | Observable | User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \nfindAllUsers(request: Empty)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            Empty\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise | Observable | UserList\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneUser\n                        \n                    \n                \n            \n            \n                \nfindOneUser(request: FindOneUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            FindOneUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise | Observable | User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryUsers\n                        \n                    \n                \n            \n            \n                \nqueryUsers(request: Observable)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUser\n                        \n                    \n                \n            \n            \n                \nremoveUser(request: FindOneUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            FindOneUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise | Observable | Message\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(request: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/types/auth.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise | Observable | User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport const protobufPackage = \"auth\";\n\nexport interface PaginationDto {\n  page: number;\n  skip: number;\n}\n\nexport interface Message {\n  message: string;\n}\n\nexport interface UpdateUserDto {\n  id: string;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface FindOneUserDto {\n  id: string;\n}\n\nexport interface Empty {\n}\n\nexport interface UserList {\n  users: User[];\n}\n\nexport interface CreateUserDto {\n  username: string;\n  password: string;\n  age: number;\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  password: string;\n  age: number;\n  subscribed: boolean;\n  socialMedia: SocialMedia | undefined;\n}\n\nexport interface SocialMedia {\n  twitterUri?: string | undefined;\n  fbUri?: string | undefined;\n}\n\nexport const AUTH_PACKAGE_NAME = \"auth\";\n\nexport interface UsersServiceClient {\n  createUser(request: CreateUserDto): Observable;\n\n  findAllUsers(request: Empty): Observable;\n\n  findOneUser(request: FindOneUserDto): Observable;\n\n  updateUser(request: UpdateUserDto): Observable;\n\n  removeUser(request: FindOneUserDto): Observable;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport interface UsersServiceController {\n  createUser(request: CreateUserDto): Promise | Observable | User;\n\n  findAllUsers(request: Empty): Promise | Observable | UserList;\n\n  findOneUser(request: FindOneUserDto): Promise | Observable | User;\n\n  updateUser(request: UpdateUserDto): Promise | Observable | User;\n\n  removeUser(request: FindOneUserDto): Promise | Observable | Message;\n\n  queryUsers(request: Observable): Observable;\n}\n\nexport function UsersServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createUser\", \"findAllUsers\", \"findOneUser\", \"updateUser\", \"removeUser\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [\"queryUsers\"];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"UsersService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const USERS_SERVICE_NAME = \"UsersService\";\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        apps/api-gateway/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/api-gateway/src/users/constants.ts\n            \n            variable\n            AUTH_SERVICE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api-gateway/src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        apps/auth/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/auth/src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/auth/src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/auth/src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            Empty\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            FindOneUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            PaginationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            SocialMedia\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            UpdateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            UserList\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            UsersServiceClient\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/common/src/types/auth.ts\n            \n            interface\n            UsersServiceController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        libs/common/src/types/auth.ts\n            \n            function\n            UsersServiceControllerMethods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/types/auth.ts\n            \n            variable\n            AUTH_PACKAGE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/types/auth.ts\n            \n            variable\n            protobufPackage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/common/src/types/auth.ts\n            \n            variable\n            USERS_SERVICE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @grpc/grpc-js : ^1.12.6\n        \n            @grpc/proto-loader : ^0.7.13\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^11.0.11\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            ts-proto : ^2.6.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            UsersServiceControllerMethods   (libs/.../auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api-gateway/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/auth/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    libs/common/src/types/auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersServiceControllerMethods\n                        \n                    \n                \n            \n            \n                \nUsersServiceControllerMethods()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ pnpm installCompile and run the project\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodRun tests\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ pnpm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiGatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiGatewayModule\n\n\n\ncluster_ApiGatewayModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nApiGatewayModule\n\nApiGatewayModule\n\nApiGatewayModule -->\n\nUsersModule->ApiGatewayModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_PACKAGE_NAME   (libs/.../auth.ts)\n                        \n                        \n                            AUTH_SERVICE   (apps/.../constants.ts)\n                        \n                        \n                            protobufPackage   (libs/.../auth.ts)\n                        \n                        \n                            USERS_SERVICE_NAME   (libs/.../auth.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/types/auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_PACKAGE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        protobufPackage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"auth\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERS_SERVICE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"UsersService\"\n                    \n                \n\n\n        \n    \n\n    apps/api-gateway/src/users/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_SERVICE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
